name: Deploy to Production

on:
  push:
    branches: ["main"]
    paths:
      - "Client/**"
  workflow_dispatch:

jobs:
  install_and_build:
    runs-on: ubuntu-latest
    name: Install Dependencies and Build
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Git Checkout
        uses: actions/checkout@v4
      - name: Restore dependencies from Cache
        uses: actions/cache@v4
        with:
          path: ./Client/node_modules
          key: ${{ runner.OS }}-npm-${{ hashFiles('./Client/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-
      - name: Install dependencies if missing/outdated
        run: npm install --prefix ./Client/
      - name: Build for production
        run: npm run build --prefix ./Client/
      - name: Archive production artifacts
        run: tar -czf dist.tar.gz -C ./Client/ dist
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist.tar.gz
          retention-days: 1

  deploy:
    needs: [install_and_build]
    runs-on: ubuntu-latest
    name: Deploy
    permissions:
      contents: read
      deployments: write
    environment:
      name: 'Production: Angular SPA'
      url: ${{ vars.SITE_URL }}
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Git Checkout
        uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./Client/
      - name: Extract build artifacts
        run: tar -xzf ./Client/dist.tar.gz -C ./Client/
      - name: Deploy to production server
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./Client/dist/
          server-dir: ${{ vars.SERVER_DIR }}
